<!-- Header del Dashboard -->
<div class="mb-8">
  <div class="bg-gradient-to-r from-blue-600 to-blue-700 rounded-xl shadow-lg p-6 mb-6">
    <h2 class="text-2xl font-bold text-white mb-2">Dashboard de Asesores</h2>
    <p class="text-blue-100">Métricas y análisis de rendimiento del equipo</p>
  </div>
  
  <!-- Selector de Periodo -->
  <div class="bg-white rounded-xl shadow-md border border-gray-100">
    <div class="px-6 py-4 border-b border-gray-100">
      <h3 class="text-sm font-semibold text-gray-700 uppercase tracking-wide flex items-center">
        <svg class="h-5 w-5 mr-2 text-blue-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
        </svg>
        Periodo de Análisis
      </h3>
    </div>
    <div class="px-6 py-5">
      <form class="flex flex-col sm:flex-row gap-4 items-start sm:items-end" method="GET" action="/dashboard">
        <div class="flex-1">
          <label for="anio" class="block text-xs font-semibold text-gray-600 uppercase tracking-wide mb-2">Año</label>
          <input type="number" min="2000" max="2100" id="anio" name="anio" value="<%= periodo.anio %>" class="block w-full border-2 border-gray-200 rounded-lg shadow-sm px-4 py-2.5 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition text-sm font-medium">
        </div>
        <div class="flex-1">
          <label for="mes" class="block text-xs font-semibold text-gray-600 uppercase tracking-wide mb-2">Mes</label>
          <select id="mes" name="mes" class="block w-full border-2 border-gray-200 rounded-lg shadow-sm px-4 py-2.5 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition text-sm font-medium">
            <% for (let i=1;i<=12;i++){ %>
              <option value="<%= i %>" <%= periodo.mes===i ? 'selected' : '' %>><%= String(i).padStart(2,'0') %> - <%= ['Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre'][i-1] %></option>
            <% } %>
          </select>
        </div>
        <div>
          <button type="submit" class="inline-flex items-center px-6 py-2.5 border border-transparent text-sm font-semibold rounded-lg shadow-md text-white bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all">
            <svg class="h-4 w-4 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
            Consultar
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- KPI Cards -->
<div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4 mb-10">
  <!-- Total Asesores -->
  <div class="bg-gradient-to-br from-blue-50 to-blue-100 overflow-hidden rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border border-blue-200">
    <div class="px-3 py-2.5">
      <div class="flex items-center gap-3">
        <div class="flex-shrink-0 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg p-2.5 shadow-lg">
          <svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z" />
          </svg>
        </div>
        <div class="flex-1">
          <dt class="text-xs font-semibold text-blue-700 uppercase tracking-wide mb-0.5">Asesores Activos</dt>
          <dd class="text-2xl font-bold text-blue-900"><%= kpis.totalAsesores %></dd>
        </div>
      </div>
    </div>
  </div>

  <!-- Nivel de Servicio -->
  <div class="bg-gradient-to-br from-green-50 to-green-100 overflow-hidden rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border border-green-200">
    <div class="px-3 py-2.5">
      <div class="flex items-center gap-3">
        <div class="flex-shrink-0 bg-gradient-to-br from-green-500 to-green-600 rounded-lg p-2.5 shadow-lg">
          <svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        </div>
        <div class="flex-1">
          <dt class="text-xs font-semibold text-green-700 uppercase tracking-wide mb-0.5">Nivel de Servicio</dt>
          <dd class="text-2xl font-bold text-green-900"><%= kpis.nivelServicio %>%</dd>
        </div>
      </div>
    </div>
  </div>

  <!-- TMO Promedio -->
  <div class="bg-gradient-to-br from-purple-50 to-purple-100 overflow-hidden rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border border-purple-200">
    <div class="px-3 py-2.5">
      <div class="flex items-center gap-3">
        <div class="flex-shrink-0 bg-gradient-to-br from-purple-500 to-purple-600 rounded-lg p-2.5 shadow-lg">
          <svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        </div>
        <div class="flex-1">
          <dt class="text-xs font-semibold text-purple-700 uppercase tracking-wide mb-0.5">TMO Promedio</dt>
          <dd class="text-2xl font-bold text-purple-900">
              <% 
                const secs = Math.floor(kpis.tmoPromedio);
                const h = Math.floor(secs / 3600);
                const m = Math.floor((secs % 3600) / 60);
                const s = secs % 60;
              %>
              <%= String(h).padStart(2,'0') %>:<%= String(m).padStart(2,'0') %>:<%= String(s).padStart(2,'0') %>
          </dd>
        </div>
      </div>
    </div>
  </div>

  <!-- Llamadas Contestadas -->
  <div class="bg-gradient-to-br from-yellow-50 to-yellow-100 overflow-hidden rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border border-yellow-200">
    <div class="px-3 py-2.5">
      <div class="flex items-center gap-3">
        <div class="flex-shrink-0 bg-gradient-to-br from-yellow-500 to-yellow-600 rounded-lg p-2.5 shadow-lg">
          <svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
          </svg>
        </div>
        <div class="flex-1">
          <dt class="text-xs font-semibold text-yellow-700 uppercase tracking-wide mb-0.5">Llamadas Contestadas</dt>
          <dd class="text-2xl font-bold text-yellow-900"><%= kpis.totalContestadas.toLocaleString() %></dd>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Gráficos -->
<div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-10">
  <!-- Top 10 Asesores -->
  <div class="bg-white rounded-2xl shadow-xl border border-gray-100 overflow-hidden">
    <div class="bg-gradient-to-r from-blue-600 to-blue-700 px-6 py-4">
      <div class="flex items-center">
        <svg class="h-6 w-6 text-white mr-3" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
        </svg>
        <h4 class="text-lg font-bold text-white">Top 10 Asesores</h4>
      </div>
      <p class="text-blue-100 text-sm mt-1">Por Llamadas Contestadas</p>
    </div>
    <div class="p-6 bg-gradient-to-br from-gray-50 to-white" style="height: 500px;">
      <canvas id="top10Chart"></canvas>
    </div>
  </div>

  <!-- Distribución de Estados -->
  <div class="bg-white rounded-2xl shadow-xl border border-gray-100 overflow-hidden">
    <div class="bg-gradient-to-r from-purple-600 to-purple-700 px-6 py-4">
      <div class="flex items-center">
        <svg class="h-6 w-6 text-white mr-3" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z" />
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.488 9H15V3.512A9.025 9.025 0 0120.488 9z" />
        </svg>
        <h4 class="text-lg font-bold text-white">Distribución de Estados</h4>
      </div>
      <p class="text-purple-100 text-sm mt-1">Suma total de todos los asesores por estado</p>
    </div>
    <div class="p-6 bg-gradient-to-br from-gray-50 to-white" style="height: 500px;">
      <canvas id="estadosChart"></canvas>
    </div>
  </div>
</div>

<!-- Rendimiento por Supervisor -->
<div class="bg-white rounded-2xl shadow-xl border border-gray-100 overflow-hidden mb-8">
  <div class="bg-gradient-to-r from-green-600 to-green-700 px-6 py-4">
    <div class="flex items-center">
      <svg class="h-6 w-6 text-white mr-3" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
      </svg>
      <h4 class="text-lg font-bold text-white">Rendimiento por Supervisor</h4>
    </div>
    <p class="text-green-100 text-sm mt-1">Comparativa de Equipos</p>
  </div>
  <div class="p-6 bg-gradient-to-br from-gray-50 to-white">
    <canvas id="supervisorChart"></canvas>
  </div>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.js"></script>
<script>
// Helper para formatear segundos a HH:MM:SS
function formatSeconds(secs) {
  const h = Math.floor(secs / 3600);
  const m = Math.floor((secs % 3600) / 60);
  const s = Math.floor(secs % 60);
  return String(h).padStart(2,'0') + ':' + String(m).padStart(2,'0') + ':' + String(s).padStart(2,'0');
}

// Top 10 Asesores
const top10Data = <%- JSON.stringify(top10Asesores) %>;
new Chart(document.getElementById('top10Chart'), {
  type: 'bar',
  data: {
    labels: top10Data.map(a => a.nombre.split(' ').slice(0, 2).join(' ')),
    datasets: [{
      label: 'Llamadas Contestadas',
      data: top10Data.map(a => a.contestadas),
      backgroundColor: 'rgba(59, 130, 246, 0.8)',
      borderColor: 'rgba(59, 130, 246, 1)',
      borderWidth: 1
    }]
  },
  options: {
    indexAxis: 'y',
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      legend: {
        display: false
      },
      tooltip: {
        titleFont: { size: 11 },
        bodyFont: { size: 10 },
        padding: 8,
        callbacks: {
          afterLabel: function(context) {
            const idx = context.dataIndex;
            return 'TMO: ' + formatSeconds(top10Data[idx].tmo);
          }
        }
      }
    },
    scales: {
      x: {
        beginAtZero: true,
        ticks: {
          precision: 0,
          font: { size: 10 }
        },
        grid: {
          color: 'rgba(0, 0, 0, 0.05)'
        }
      },
      y: {
        ticks: {
          font: { size: 10 }
        },
        grid: {
          display: false
        }
      }
    }
  }
});

// Distribución de Estados
const estadosData = <%- JSON.stringify(estadosDistribucion) %>;
const estadosLabels = Object.keys(estadosData);
const estadosValues = Object.values(estadosData);

new Chart(document.getElementById('estadosChart'), {
  type: 'doughnut',
  data: {
    labels: estadosLabels,
    datasets: [{
      data: estadosValues,
      backgroundColor: [
        'rgba(59, 130, 246, 0.8)',   // Conectado - azul
        'rgba(147, 197, 253, 0.8)',  // En Cola - azul claro
        'rgba(156, 163, 175, 0.8)',  // Fuera de Cola - gris
        'rgba(139, 92, 246, 0.8)',   // Interactuando - violeta
        'rgba(251, 146, 60, 0.8)',   // No Responde - naranja
        'rgba(107, 114, 128, 0.8)',  // Inactivo - gris oscuro
        'rgba(34, 197, 94, 0.8)',    // Disponible - verde
        'rgba(234, 179, 8, 0.8)',    // Comida - amarillo
        'rgba(168, 85, 247, 0.8)',   // Ocupado - morado
        'rgba(239, 68, 68, 0.8)',    // Ausente - rojo
        'rgba(251, 146, 60, 0.8)',   // Descanso - naranja claro
        'rgba(148, 163, 184, 0.8)',  // Sistema Ausente - gris medio
        'rgba(99, 102, 241, 0.8)',   // Reunión - índigo
        'rgba(14, 165, 233, 0.8)',   // Capacitación - cyan
        'rgba(37, 99, 235, 0.8)'     // En Comunicación - azul fuerte
      ],
      borderWidth: 2
    }]
  },
  options: {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      legend: {
        position: 'right',
        labels: {
          font: { size: 9 },
          padding: 6,
          boxWidth: 10,
          boxHeight: 10
        }
      },
      tooltip: {
        titleFont: { size: 11 },
        bodyFont: { size: 10 },
        padding: 8,
        callbacks: {
          label: function(context) {
            const label = context.label || '';
            const value = formatSeconds(context.parsed);
            const total = estadosValues.reduce((a,b) => a+b, 0) || 1;
            const percentage = ((context.parsed / total) * 100).toFixed(1);
            return label + ': ' + value + ' (' + percentage + '%)';
          }
        }
      }
    }
  }
});

// Rendimiento por Supervisor
const supervisorData = <%- JSON.stringify(porSupervisor) %>;
new Chart(document.getElementById('supervisorChart'), {
  type: 'bar',
  data: {
    labels: supervisorData.map(s => {
      const name = s.supervisor || 'Sin supervisor';
      return name.length > 20 ? name.substring(0, 20) + '...' : name;
    }),
    datasets: [
      {
        label: 'Llamadas Contestadas (Prom.)',
        data: supervisorData.map(s => s.contestadasPromedio),
        backgroundColor: 'rgba(34, 197, 94, 0.8)',
        borderColor: 'rgba(34, 197, 94, 1)',
        borderWidth: 1,
        yAxisID: 'y'
      },
      {
        label: 'TMO Promedio (seg)',
        data: supervisorData.map(s => s.tmoPromedio),
        backgroundColor: 'rgba(239, 68, 68, 0.8)',
        borderColor: 'rgba(239, 68, 68, 1)',
        borderWidth: 1,
        yAxisID: 'y1'
      }
    ]
  },
  options: {
    responsive: true,
    maintainAspectRatio: true,
    interaction: {
      mode: 'index',
      intersect: false,
    },
    plugins: {
      legend: {
        labels: {
          font: { size: 10 },
          padding: 10,
          boxWidth: 12
        }
      },
      tooltip: {
        titleFont: { size: 11 },
        bodyFont: { size: 10 },
        padding: 8,
        callbacks: {
          title: function(context) {
            // Mostrar nombre completo en tooltip
            const idx = context[0].dataIndex;
            return supervisorData[idx].supervisor || 'Sin supervisor';
          },
          label: function(context) {
            let label = context.dataset.label || '';
            if (label) {
              label += ': ';
            }
            if (context.dataset.yAxisID === 'y1') {
              label += formatSeconds(context.parsed.y);
            } else {
              label += context.parsed.y.toFixed(2);
            }
            return label;
          }
        }
      }
    },
    scales: {
      x: {
        ticks: {
          font: { size: 10 }
        },
        grid: {
          color: 'rgba(0, 0, 0, 0.05)'
        }
      },
      y: {
        type: 'linear',
        display: true,
        position: 'left',
        beginAtZero: true,
        title: {
          display: true,
          text: 'Llamadas Contestadas (Prom.)',
          font: { size: 11 }
        },
        ticks: {
          font: { size: 10 }
        },
        grid: {
          color: 'rgba(0, 0, 0, 0.05)'
        }
      },
      y1: {
        type: 'linear',
        display: true,
        position: 'right',
        beginAtZero: true,
        title: {
          display: true,
          text: 'TMO (segundos)',
          font: { size: 11 }
        },
        ticks: {
          font: { size: 10 }
        },
        grid: {
          drawOnChartArea: false
        }
      }
    }
  }
});
</script>
