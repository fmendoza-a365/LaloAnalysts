<!-- Header Ejecutivo del Dashboard -->
<div class="bg-gradient-to-r from-blue-600 to-indigo-700 rounded-lg shadow-2xl mb-8">
  <div class="px-6 py-8">
    <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-6">
      <div class="flex-1">
        <h1 class="text-3xl lg:text-4xl font-bold text-white flex items-center gap-4 mb-3">
          <svg class="h-12 w-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"/>
          </svg>
          Dashboard General
        </h1>
        <p class="text-blue-100 text-lg">Panel de control integral de rendimiento y productividad del equipo</p>
      </div>
      <div class="flex items-center gap-4 bg-white/10 backdrop-blur-sm rounded-xl p-4">
        <div class="text-center">
          <div class="text-white/80 text-sm mb-1">Total Asesores</div>
          <div class="text-4xl font-bold text-white"><%= kpis.totalAsesores %></div>
        </div>
        <div class="h-16 w-px bg-white/30"></div>
        <div class="text-center">
          <div class="text-white/80 text-sm mb-1">Periodo</div>
          <div class="text-2xl font-bold text-white"><%= ['Ene','Feb','Mar','Abr','May','Jun','Jul','Ago','Sep','Oct','Nov','Dic'][periodo.mes-1] %> <%= periodo.anio %></div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Selector de Periodo - Integrado en header -->
  <div class="bg-white/10 backdrop-blur-sm border-t border-white/20">
    <div class="px-6 py-4">
      <form method="GET" action="/dashboard" class="flex flex-col sm:flex-row sm:flex-wrap gap-3 sm:gap-4 items-stretch sm:items-end">
        <div class="flex-1 min-w-[140px]">
          <label for="anio" class="block text-xs font-semibold text-white/90 uppercase tracking-wide mb-2">Año</label>
          <input type="number" min="2000" max="2100" id="anio" name="anio" value="<%= periodo.anio %>" class="block w-full border border-white/30 bg-white/20 text-white placeholder-white/50 rounded-lg px-4 py-2.5 focus:outline-none focus:ring-2 focus:ring-white/50 focus:border-white transition text-sm font-medium">
        </div>
        <div class="flex-1 min-w-[180px]">
          <label for="mes" class="block text-xs font-semibold text-white/90 uppercase tracking-wide mb-2">Mes</label>
          <select id="mes" name="mes" class="block w-full border border-white/30 bg-white/20 text-white rounded-lg px-4 py-2.5 focus:outline-none focus:ring-2 focus:ring-white/50 focus:border-white transition text-sm font-medium">
            <% for (let i=1;i<=12;i++){ %>
              <option value="<%= i %>" <%= periodo.mes===i ? 'selected' : '' %> class="text-gray-900"><%= String(i).padStart(2,'0') %> - <%= ['Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre'][i-1] %></option>
            <% } %>
          </select>
        </div>
        <div class="flex-1 min-w-[200px]">
          <label for="supervisor" class="block text-xs font-semibold text-white/90 uppercase tracking-wide mb-2">Supervisor</label>
          <select id="supervisor" name="supervisor" class="block w-full border border-white/30 bg-white/20 text-white rounded-lg px-4 py-2.5 focus:outline-none focus:ring-2 focus:ring-white/50 focus:border-white transition text-sm font-medium">
            <option value="" class="text-gray-900">Todos los Supervisores</option>
            <% (todosLosSupervisores || []).forEach(sup => { %>
              <option value="<%= sup %>" <%= filtros.supervisor === sup ? 'selected' : '' %> class="text-gray-900"><%= sup %></option>
            <% }) %>
          </select>
        </div>
        <div class="flex-1 min-w-[160px]">
          <label for="antiguedad" class="block text-xs font-semibold text-white/90 uppercase tracking-wide mb-2">Antigüedad</label>
          <select id="antiguedad" name="antiguedad" class="block w-full border border-white/30 bg-white/20 text-white rounded-lg px-4 py-2.5 focus:outline-none focus:ring-2 focus:ring-white/50 focus:border-white transition text-sm font-medium">
            <option value="" class="text-gray-900">Todas</option>
            <option value="nuevo" <%= filtros.antiguedad === 'nuevo' ? 'selected' : '' %> class="text-gray-900">Nuevo (1-30 días)</option>
            <option value="intermedio" <%= filtros.antiguedad === 'intermedio' ? 'selected' : '' %> class="text-gray-900">Intermedio (30-90 días)</option>
            <option value="antiguo" <%= filtros.antiguedad === 'antiguo' ? 'selected' : '' %> class="text-gray-900">Antiguo (+90 días)</option>
          </select>
        </div>
        <div class="flex-1 min-w-[180px]">
          <label for="mesa" class="block text-xs font-semibold text-white/90 uppercase tracking-wide mb-2">Mesa</label>
          <select id="mesa" name="mesa" class="block w-full border border-white/30 bg-white/20 text-white rounded-lg px-4 py-2.5 focus:outline-none focus:ring-2 focus:ring-white/50 focus:border-white transition text-sm font-medium">
            <option value="" class="text-gray-900">Todas las Mesas</option>
            <% (todasLasMesas || []).forEach(mesa => { %>
              <option value="<%= mesa %>" <%= filtros.mesa === mesa ? 'selected' : '' %> class="text-gray-900"><%= mesa %></option>
            <% }) %>
          </select>
        </div>
        <div>
          <button type="submit" class="inline-flex items-center px-6 py-2.5 border-2 border-white/40 text-sm font-bold rounded-lg shadow-lg text-white bg-white/20 hover:bg-white/30 hover:border-white/60 focus:outline-none focus:ring-2 focus:ring-white/50 backdrop-blur-sm transition-all">
            <svg class="h-5 w-5 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2.5">
              <path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
            Aplicar Filtros
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- KPI Cards -->
<div class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4 mb-10">
  <!-- Total Asesores Activos -->
  <div class="bg-gradient-to-br from-blue-50 to-blue-100 overflow-hidden rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border border-blue-200">
    <div class="px-3 py-2.5">
      <div class="flex items-center gap-3">
        <div class="flex-shrink-0 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg p-2.5 shadow-lg">
          <svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z" />
          </svg>
        </div>
        <div class="flex-1">
          <dt class="text-xs font-semibold text-blue-700 uppercase tracking-wide mb-0.5">Asesores Activos</dt>
          <dd class="text-2xl font-bold text-blue-900"><%= kpis.totalAsesores %></dd>
        </div>
      </div>
    </div>
  </div>

  <!-- Asesores de Baja -->
  <div class="bg-gradient-to-br from-red-50 to-red-100 overflow-hidden rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border border-red-200">
    <div class="px-3 py-2.5">
      <div class="flex items-center gap-3">
        <div class="flex-shrink-0 bg-gradient-to-br from-red-500 to-red-600 rounded-lg p-2.5 shadow-lg">
          <svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7a4 4 0 11-8 0 4 4 0 018 0zM9 14a6 6 0 00-6 6v1h12v-1a6 6 0 00-6-6zM21 12h-6" />
          </svg>
        </div>
        <div class="flex-1">
          <dt class="text-xs font-semibold text-red-700 uppercase tracking-wide mb-0.5">Asesores de Baja</dt>
          <dd class="text-2xl font-bold text-red-900"><%= kpis.totalBaja %></dd>
        </div>
      </div>
    </div>
  </div>

  <!-- Rotación -->
  <div class="bg-gradient-to-br from-orange-50 to-orange-100 overflow-hidden rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border border-orange-200">
    <div class="px-3 py-2.5">
      <div class="flex items-center gap-3">
        <div class="flex-shrink-0 bg-gradient-to-br from-orange-500 to-orange-600 rounded-lg p-2.5 shadow-lg">
          <svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
          </svg>
        </div>
        <div class="flex-1">
          <dt class="text-xs font-semibold text-orange-700 uppercase tracking-wide mb-0.5">Rotación</dt>
          <dd class="text-2xl font-bold text-orange-900"><%= kpis.rotacion %>%</dd>
        </div>
      </div>
    </div>
  </div>

  <!-- Full Time -->
  <div class="bg-gradient-to-br from-green-50 to-green-100 overflow-hidden rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border border-green-200">
    <div class="px-3 py-2.5">
      <div class="flex items-center gap-3">
        <div class="flex-shrink-0 bg-gradient-to-br from-green-500 to-green-600 rounded-lg p-2.5 shadow-lg">
          <svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
          </svg>
        </div>
        <div class="flex-1">
          <dt class="text-xs font-semibold text-green-700 uppercase tracking-wide mb-0.5">Full Time</dt>
          <dd class="text-2xl font-bold text-green-900"><%= kpis.fullTime %></dd>
        </div>
      </div>
    </div>
  </div>

  <!-- Part Time -->
  <div class="bg-gradient-to-br from-purple-50 to-purple-100 overflow-hidden rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border border-purple-200">
    <div class="px-3 py-2.5">
      <div class="flex items-center gap-3">
        <div class="flex-shrink-0 bg-gradient-to-br from-purple-500 to-purple-600 rounded-lg p-2.5 shadow-lg">
          <svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        </div>
        <div class="flex-1">
          <dt class="text-xs font-semibold text-purple-700 uppercase tracking-wide mb-0.5">Part Time</dt>
          <dd class="text-2xl font-bold text-purple-900"><%= kpis.partTime %></dd>
        </div>
      </div>
    </div>
  </div>

  <!-- Total Llamadas -->
  <div class="bg-gradient-to-br from-yellow-50 to-yellow-100 overflow-hidden rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border border-yellow-200">
    <div class="px-3 py-2.5">
      <div class="flex items-center gap-3">
        <div class="flex-shrink-0 bg-gradient-to-br from-yellow-500 to-yellow-600 rounded-lg p-2.5 shadow-lg">
          <svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
          </svg>
        </div>
        <div class="flex-1">
          <dt class="text-xs font-semibold text-yellow-700 uppercase tracking-wide mb-0.5">Total Llamadas Atendidas</dt>
          <dd class="text-2xl font-bold text-yellow-900"><%= (kpis.totalContestadas || 0).toLocaleString() %></dd>
        </div>
      </div>
    </div>
  </div>

  <!-- TMO Promedio -->
  <div class="bg-gradient-to-br from-teal-50 to-teal-100 overflow-hidden rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border border-teal-200">
    <div class="px-3 py-2.5">
      <div class="flex items-center gap-3">
        <div class="flex-shrink-0 bg-gradient-to-br from-teal-500 to-teal-600 rounded-lg p-2.5 shadow-lg">
          <svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        </div>
        <div class="flex-1">
          <dt class="text-xs font-semibold text-teal-700 uppercase tracking-wide mb-0.5">TMO Promedio</dt>
          <dd class="text-xl font-bold text-teal-900">
            <% 
              const tmoSecs = Math.floor(kpis.tmoPromedio || 0);
              const tmoH = Math.floor(tmoSecs / 3600);
              const tmoM = Math.floor((tmoSecs % 3600) / 60);
              const tmoS = tmoSecs % 60;
            %>
            <%= String(tmoH).padStart(2,'0') %>:<%= String(tmoM).padStart(2,'0') %>:<%= String(tmoS).padStart(2,'0') %>
          </dd>
        </div>
      </div>
    </div>
  </div>

  <!-- ACW Promedio -->
  <div class="bg-gradient-to-br from-indigo-50 to-indigo-100 overflow-hidden rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border border-indigo-200">
    <div class="px-3 py-2.5">
      <div class="flex items-center gap-3">
        <div class="flex-shrink-0 bg-gradient-to-br from-indigo-500 to-indigo-600 rounded-lg p-2.5 shadow-lg">
          <svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
          </svg>
        </div>
        <div class="flex-1">
          <dt class="text-xs font-semibold text-indigo-700 uppercase tracking-wide mb-0.5">ACW Promedio</dt>
          <dd class="text-xl font-bold text-indigo-900">
            <% 
              const acwSecs = Math.floor(kpis.acwPromedio || 0);
              const acwH = Math.floor(acwSecs / 3600);
              const acwM = Math.floor((acwSecs % 3600) / 60);
              const acwS = acwSecs % 60;
            %>
            <%= String(acwH).padStart(2,'0') %>:<%= String(acwM).padStart(2,'0') %>:<%= String(acwS).padStart(2,'0') %>
          </dd>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- ========== SECCIÓN EJECUTIVA: KPIs POR MESAS ========== -->
<% if (kpisPorMesa && kpisPorMesa.length > 0) { %>
<div class="mb-8">
  <div class="bg-gradient-to-r from-indigo-600 to-purple-600 rounded-lg p-6 mb-6 shadow-lg">
    <div class="flex items-center justify-between">
      <div>
        <h2 class="text-2xl font-bold text-white flex items-center gap-3">
          <svg class="h-8 w-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
          </svg>
          Dashboard Ejecutivo de KPIs
        </h2>
        <p class="text-indigo-100 mt-1">Métricas operativas por mesa de trabajo</p>
      </div>
      <div class="text-right">
        <div class="text-white/80 text-sm">Periodo</div>
        <div class="text-2xl font-bold text-white"><%= ['Ene','Feb','Mar','Abr','May','Jun','Jul','Ago','Sep','Oct','Nov','Dic'][periodo.mes-1] %> <%= periodo.anio %></div>
      </div>
    </div>
  </div>

  <!-- Gráficos Ejecutivos -->
  <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6">
    
    <!-- Tendencia Diaria (Últimos 7 días) -->
    <div class="lg:col-span-2 bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden">
      <div class="bg-gradient-to-r from-blue-50 to-indigo-50 px-6 py-4 border-b border-gray-200">
        <h3 class="text-lg font-bold text-gray-900 flex items-center gap-2">
          <svg class="h-5 w-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"/>
          </svg>
          Tendencia Diaria - Nivel de Servicio
        </h3>
        <p class="text-sm text-gray-600 mt-1">Evolución últimos 7 días del mes</p>
      </div>
      <div class="p-6" style="min-height: 350px;">
        <canvas id="tendenciaDiariaChart"></canvas>
      </div>
    </div>

    <!-- KPI Cards Resumen -->
    <div class="space-y-4">
      <div class="bg-gradient-to-br from-green-500 to-green-600 rounded-xl p-5 text-white shadow-lg">
        <div class="flex items-center justify-between mb-2">
          <svg class="h-10 w-10 opacity-80" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
          <div class="text-right">
            <div class="text-3xl font-bold"><%= (kpisPorMesa.reduce((sum, m) => sum + parseFloat(m.nivelServicio), 0) / kpisPorMesa.length).toFixed(2) %>%</div>
            <div class="text-green-100 text-sm">NS Promedio</div>
          </div>
        </div>
        <div class="text-green-100 text-sm">Nivel de Servicio Global</div>
      </div>

      <div class="bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl p-5 text-white shadow-lg">
        <div class="flex items-center justify-between mb-2">
          <svg class="h-10 w-10 opacity-80" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
          </svg>
          <div class="text-right">
            <div class="text-3xl font-bold"><%= kpisPorMesa.reduce((sum, m) => sum + m.contestadas, 0).toLocaleString('es-PE') %></div>
            <div class="text-blue-100 text-sm">Llamadas</div>
          </div>
        </div>
        <div class="text-blue-100 text-sm">Total Contestadas</div>
      </div>

      <div class="bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl p-5 text-white shadow-lg">
        <div class="flex items-center justify-between mb-2">
          <svg class="h-10 w-10 opacity-80" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
          <div class="text-right">
            <div class="text-3xl font-bold"><%= Math.round(kpisPorMesa.reduce((sum, m) => sum + parseInt(m.tmoPromedio), 0) / kpisPorMesa.length) %>s</div>
            <div class="text-orange-100 text-sm">TMO</div>
          </div>
        </div>
        <div class="text-orange-100 text-sm">Tiempo Medio Operativo</div>
      </div>
    </div>
  </div>

  <!-- Tendencia Por Hora y Tabla de Mesas -->
  <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
    
    <!-- Tendencia Por Hora -->
    <div class="bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden">
      <div class="bg-gradient-to-r from-purple-50 to-pink-50 px-6 py-4 border-b border-gray-200">
        <h3 class="text-lg font-bold text-gray-900 flex items-center gap-2">
          <svg class="h-5 w-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
          Distribución por Hora
        </h3>
        <p class="text-sm text-gray-600 mt-1">Volumen de llamadas en horario laboral</p>
      </div>
      <div class="p-6" style="min-height: 400px;">
        <canvas id="tendenciaPorHoraChart"></canvas>
      </div>
    </div>

    <!-- Tabla Ejecutiva de Mesas -->
    <div class="bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden">
      <div class="bg-gradient-to-r from-teal-50 to-cyan-50 px-6 py-4 border-b border-gray-200">
        <h3 class="text-lg font-bold text-gray-900 flex items-center gap-2">
          <svg class="h-5 w-5 text-teal-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"/>
          </svg>
          Ranking de Mesas
        </h3>
        <p class="text-sm text-gray-600 mt-1">Top mesas por volumen</p>
      </div>
      <div class="overflow-auto" style="max-height: 400px;">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50 sticky top-0">
            <tr>
              <th class="px-4 py-3 text-left text-xs font-bold text-gray-700 uppercase">#</th>
              <th class="px-4 py-3 text-left text-xs font-bold text-gray-700 uppercase">Mesa</th>
              <th class="px-4 py-3 text-center text-xs font-bold text-gray-700 uppercase">NS%</th>
              <th class="px-4 py-3 text-center text-xs font-bold text-gray-700 uppercase">Contestadas</th>
              <th class="px-4 py-3 text-center text-xs font-bold text-gray-700 uppercase">TMO</th>
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200">
            <% kpisPorMesa.slice(0, 10).forEach((mesa, idx) => { %>
            <tr class="hover:bg-gray-50 transition">
              <td class="px-4 py-3 text-sm font-bold text-gray-900"><%= idx + 1 %></td>
              <td class="px-4 py-3 text-sm font-medium text-gray-900"><%= mesa.mesa %></td>
              <td class="px-4 py-3 text-center">
                <span class="inline-flex px-2 py-1 text-xs font-bold rounded-full <%= parseFloat(mesa.nivelServicio) >= 85 ? 'bg-green-100 text-green-800' : parseFloat(mesa.nivelServicio) >= 75 ? 'bg-yellow-100 text-yellow-800' : 'bg-red-100 text-red-800' %>">
                  <%= mesa.nivelServicio %>%
                </span>
              </td>
              <td class="px-4 py-3 text-center text-sm text-gray-900"><%= mesa.contestadas.toLocaleString('es-PE') %></td>
              <td class="px-4 py-3 text-center text-sm text-gray-600"><%= mesa.tmoPromedio %>s</td>
            </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>
<% } %>

<!-- Gráficos de Asesores - Estilo Ejecutivo -->
<div class="mb-8">
  <div class="bg-gradient-to-r from-blue-500 to-cyan-600 rounded-lg p-6 mb-6 shadow-lg">
    <h2 class="text-2xl font-bold text-white flex items-center gap-3">
      <svg class="h-8 w-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
      </svg>
      Análisis de Rendimiento de Asesores
    </h2>
    <p class="text-blue-100 mt-1">Estadísticas detalladas de desempeño individual y por equipos</p>
  </div>
</div>

<div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">

  <!-- Top 10 Asesores -->
  <div class="bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden">
    <div class="bg-gradient-to-r from-blue-50 to-cyan-50 px-6 py-4 border-b border-gray-200">
      <h3 class="text-lg font-bold text-gray-900 flex items-center gap-2">
        <svg class="h-5 w-5 text-blue-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
        </svg>
        Top 10 Asesores
      </h3>
      <p class="text-sm text-gray-600 mt-1">Ranking por llamadas contestadas</p>
    </div>
    <div class="p-6" style="min-height: 400px;">
      <canvas id="top10Chart"></canvas>
    </div>
  </div>

  <!-- Distribución de Estados -->
  <div class="bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden">
    <div class="bg-gradient-to-r from-purple-50 to-pink-50 px-6 py-4 border-b border-gray-200">
      <h3 class="text-lg font-bold text-gray-900 flex items-center gap-2">
        <svg class="h-5 w-5 text-purple-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z" />
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.488 9H15V3.512A9.025 9.025 0 0120.488 9z" />
        </svg>
        Distribución de Estados
      </h3>
      <p class="text-sm text-gray-600 mt-1">Tiempo total por estado de todos los asesores</p>
    </div>
    <div class="p-6" style="min-height: 500px;">
      <canvas id="estadosChart"></canvas>
    </div>
  </div>
</div>

<!-- Grid para Rendimiento por Supervisor - Full Width -->
<div class="grid grid-cols-1 gap-6 mb-8">
  <!-- Rendimiento por Supervisor -->
  <div class="bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden">
    <div class="bg-gradient-to-r from-green-50 to-emerald-50 px-6 py-4 border-b border-gray-200">
      <h3 class="text-lg font-bold text-gray-900 flex items-center gap-2">
        <svg class="h-5 w-5 text-green-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
        </svg>
        Rendimiento por Supervisor
      </h3>
      <p class="text-sm text-gray-600 mt-1">Promedio de TMO y llamadas contestadas por equipo de trabajo</p>
    </div>
    <div class="p-6" style="min-height: 400px;">
      <canvas id="supervisorChart"></canvas>
    </div>
  </div>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.js"></script>
<script>
// Helper para formatear segundos a HH:MM:SS
function formatSeconds(secs) {
  const h = Math.floor(secs / 3600);
  const m = Math.floor((secs % 3600) / 60);
  const s = Math.floor(secs % 60);
  return String(h).padStart(2,'0') + ':' + String(m).padStart(2,'0') + ':' + String(s).padStart(2,'0');
}

// Helper para formatear porcentajes con máximo 2 decimales
function formatPercentage(value) {
  if (value === null || value === undefined || isNaN(value)) {
    return '0.00';
  }
  return parseFloat(value).toFixed(2);
}

// Helper para formatear números con máximo 2 decimales
function formatNumber(value, maxDecimals = 2) {
  if (value === null || value === undefined || isNaN(value)) {
    return '0';
  }
  const numValue = parseFloat(value);

  // Si es un número entero, devolverlo sin decimales
  if (Number.isInteger(numValue)) {
    return numValue.toString();
  }

  // Si tiene decimales, limitarlos al máximo especificado
  return numValue.toFixed(maxDecimals);
}

// Helper para formatear números con separadores de miles y máximo 2 decimales
function formatNumberLocale(value, maxDecimals = 2) {
  if (value === null || value === undefined || isNaN(value)) {
    return '0';
  }
  return parseFloat(value).toLocaleString('es-PE', {
    minimumFractionDigits: 0,
    maximumFractionDigits: maxDecimals
  });
}

// Top 10 Asesores
const top10Data = <%- JSON.stringify(top10Asesores) %>;
new Chart(document.getElementById('top10Chart'), {
  type: 'bar',
  data: {
    labels: top10Data.map(a => a.nombre.split(' ').slice(0, 2).join(' ')),
    datasets: [{
      label: 'Llamadas Contestadas',
      data: top10Data.map(a => a.contestadas),
      backgroundColor: top10Data.map((_, idx) => {
        const colors = [
          'rgba(59, 130, 246, 0.85)',   // Azul
          'rgba(14, 165, 233, 0.85)',   // Cyan
          'rgba(99, 102, 241, 0.85)',   // Indigo
          'rgba(139, 92, 246, 0.85)',   // Violeta
          'rgba(168, 85, 247, 0.85)',   // Morado
          'rgba(236, 72, 153, 0.85)',   // Rosa
          'rgba(239, 68, 68, 0.85)',    // Rojo
          'rgba(249, 115, 22, 0.85)',   // Naranja
          'rgba(234, 179, 8, 0.85)',    // Amarillo
          'rgba(34, 197, 94, 0.85)'     // Verde
        ];
        return colors[idx % colors.length];
      }),
      borderColor: top10Data.map((_, idx) => {
        const colors = [
          '#3B82F6', '#0EA5E9', '#6366F1', '#8B5CF6', '#A855F7',
          '#EC4899', '#EF4444', '#F97316', '#EAB308', '#22C55E'
        ];
        return colors[idx % colors.length];
      }),
      borderWidth: 2,
      borderRadius: 8,
      borderSkipped: false
    }]
  },
  options: {
    indexAxis: 'y',
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      legend: {
        display: false
      },
      tooltip: {
        backgroundColor: 'rgba(0, 0, 0, 0.8)',
        padding: 12,
        titleFont: { size: 13, weight: 'bold' },
        bodyFont: { size: 12 },
        callbacks: {
          label: function(context) {
            return 'Llamadas: ' + context.parsed.x.toLocaleString('es-PE');
          },
          afterLabel: function(context) {
            const idx = context.dataIndex;
            return 'TMO: ' + formatSeconds(top10Data[idx].tmo);
          }
        }
      }
    },
    scales: {
      x: {
        beginAtZero: true,
        title: {
          display: true,
          text: 'Llamadas Contestadas',
          font: { size: 12, weight: '600' }
        },
        ticks: {
          callback: function(value) {
            return value.toLocaleString('es-PE');
          },
          font: { size: 11 }
        },
        grid: {
          color: 'rgba(0, 0, 0, 0.05)'
        }
      },
      y: {
        ticks: {
          font: { size: 11 }
        },
        grid: {
          drawOnChartArea: false
        }
      }
    }
  }
});

// Distribución de Estados
const estadosData = <%- JSON.stringify(estadosDistribucion) %>;
const estadosLabels = Object.keys(estadosData);
const estadosValues = Object.values(estadosData);

new Chart(document.getElementById('estadosChart'), {
  type: 'doughnut',
  data: {
    labels: estadosLabels,
    datasets: [{
      data: estadosValues,
      backgroundColor: [
        '#3B82F6',  // Conectado - azul fuerte
        '#93C5FD',  // En Cola - azul claro
        '#9CA3AF',  // Fuera de Cola - gris
        '#8B5CF6',  // Interactuando - violeta
        '#FB923C',  // No Responde - naranja
        '#6B7280',  // Inactivo - gris oscuro
        '#22C55E',  // Disponible - verde brillante
        '#EAB308',  // Comida - amarillo
        '#A855F7',  // Ocupado - morado
        '#EF4444',  // Ausente - rojo
        '#FDBA74',  // Descanso - naranja claro
        '#94A3B8',  // Sistema Ausente - gris medio
        '#6366F1',  // Reunión - índigo
        '#0EA5E9',  // Capacitación - cyan
        '#2563EB'   // En Comunicación - azul intenso
      ],
      borderColor: '#ffffff',
      borderWidth: 3,
      hoverBorderWidth: 4,
      hoverBorderColor: '#ffffff'
    }]
  },
  options: {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      legend: {
        position: window.innerWidth < 768 ? 'bottom' : 'right',
        labels: {
          font: { 
            size: window.innerWidth < 768 ? 10 : 11,
            weight: '500'
          },
          padding: window.innerWidth < 768 ? 8 : 10,
          boxWidth: 12,
          boxHeight: 12,
          usePointStyle: true,
          pointStyle: 'circle',
          generateLabels: function(chart) {
            const data = chart.data;
            if (data.labels.length && data.datasets.length) {
              const total = data.datasets[0].data.reduce((a, b) => a + b, 0);
              return data.labels.map((label, i) => {
                const value = data.datasets[0].data[i];
                const percentage = ((value / total) * 100).toFixed(2);
                return {
                  text: label + ' (' + percentage + '%)',
                  fillStyle: data.datasets[0].backgroundColor[i],
                  hidden: false,
                  index: i
                };
              });
            }
            return [];
          }
        }
      },
      tooltip: {
        backgroundColor: 'rgba(0, 0, 0, 0.8)',
        titleFont: { size: 12, weight: 'bold' },
        bodyFont: { size: 11 },
        padding: 12,
        cornerRadius: 8,
        callbacks: {
          label: function(context) {
            const label = context.label || '';
            const value = formatSeconds(context.parsed);
            const total = estadosValues.reduce((a,b) => a+b, 0) || 1;
            const percentage = ((context.parsed / total) * 100).toFixed(2);
            return label + ': ' + value + ' (' + percentage + '%)';
          }
        }
      }
    }
  }
});

// Rendimiento por Supervisor
const supervisorData = <%- JSON.stringify(porSupervisor) %>;
new Chart(document.getElementById('supervisorChart'), {
  type: 'bar',
  data: {
    labels: supervisorData.map(s => {
      const name = s.supervisor || 'Sin supervisor';
      return name.length > 20 ? name.substring(0, 20) + '...' : name;
    }),
    datasets: [
      {
        label: 'Llamadas Contestadas (Prom.)',
        data: supervisorData.map(s => s.contestadasPromedio),
        backgroundColor: 'rgba(34, 197, 94, 0.85)',
        borderColor: '#22C55E',
        borderWidth: 2,
        borderRadius: 6,
        borderSkipped: false,
        yAxisID: 'y'
      },
      {
        label: 'TMO Promedio (seg)',
        data: supervisorData.map(s => s.tmoPromedio),
        backgroundColor: 'rgba(249, 115, 22, 0.85)',
        borderColor: '#F97316',
        borderWidth: 2,
        borderRadius: 6,
        borderSkipped: false,
        yAxisID: 'y1'
      }
    ]
  },
  options: {
    responsive: true,
    maintainAspectRatio: false,
    interaction: {
      mode: 'index',
      intersect: false,
    },
    plugins: {
      legend: {
        position: 'top',
        labels: {
          font: { size: 12, weight: '600' },
          padding: 15,
          boxWidth: 12,
          usePointStyle: true,
          pointStyle: 'circle'
        }
      },
      tooltip: {
        backgroundColor: 'rgba(0, 0, 0, 0.8)',
        titleFont: { size: 13, weight: 'bold' },
        bodyFont: { size: 12 },
        padding: 12,
        cornerRadius: 8,
        callbacks: {
          title: function(context) {
            const idx = context[0].dataIndex;
            return supervisorData[idx].supervisor || 'Sin supervisor';
          },
          label: function(context) {
            let label = context.dataset.label || '';
            if (label) {
              label += ': ';
            }
            if (context.dataset.yAxisID === 'y1') {
              label += formatSeconds(context.parsed.y);
            } else {
              label += context.parsed.y.toLocaleString('es-PE', {maximumFractionDigits: 2});
            }
            return label;
          }
        }
      }
    },
    scales: {
      x: {
        ticks: {
          font: { size: window.innerWidth < 768 ? 8 : 10 },
          maxRotation: window.innerWidth < 768 ? 45 : 0,
          minRotation: window.innerWidth < 768 ? 45 : 0
        },
        grid: {
          color: 'rgba(0, 0, 0, 0.05)'
        }
      },
      y: {
        type: 'linear',
        display: true,
        position: 'left',
        beginAtZero: true,
        title: {
          display: window.innerWidth >= 768,
          text: 'Llamadas Contestadas (Prom.)',
          font: { size: 11 }
        },
        ticks: {
          font: { size: window.innerWidth < 768 ? 9 : 10 }
        },
        grid: {
          color: 'rgba(0, 0, 0, 0.05)'
        }
      },
      y1: {
        type: 'linear',
        display: true,
        position: 'right',
        beginAtZero: true,
        title: {
          display: window.innerWidth >= 768,
          text: 'TMO (segundos)',
          font: { size: 11 }
        },
        ticks: {
          font: { size: window.innerWidth < 768 ? 9 : 10 }
        },
        grid: {
          drawOnChartArea: false
        }
      }
    }
  }
});

// ========== GRÁFICOS DE KPIs POR MESAS ==========
<% if (tendenciaDiaria && tendenciaDiaria.length > 0) { %>
// Gráfico de Tendencia Diaria
const tendenciaDiariaData = <%- JSON.stringify(tendenciaDiaria) %>;
new Chart(document.getElementById('tendenciaDiariaChart'), {
  type: 'line',
  data: {
    labels: tendenciaDiariaData.map(d => 'Día ' + d.dia),
    datasets: [
      {
        label: 'Nivel de Servicio (%)',
        data: tendenciaDiariaData.map(d => d.nivelServicio.toFixed(2)),
        borderColor: '#3B82F6',
        backgroundColor: 'rgba(59, 130, 246, 0.1)',
        borderWidth: 3,
        fill: true,
        tension: 0.4,
        yAxisID: 'y',
        pointRadius: 5,
        pointBackgroundColor: '#3B82F6',
        pointBorderColor: '#ffffff',
        pointBorderWidth: 2,
        pointHoverRadius: 7
      },
      {
        label: 'Llamadas Contestadas',
        data: tendenciaDiariaData.map(d => d.contestadas),
        borderColor: '#8B5CF6',
        backgroundColor: 'rgba(139, 92, 246, 0.1)',
        borderWidth: 3,
        fill: true,
        tension: 0.4,
        yAxisID: 'y1',
        pointRadius: 5,
        pointBackgroundColor: '#8B5CF6',
        pointBorderColor: '#ffffff',
        pointBorderWidth: 2,
        pointHoverRadius: 7
      }
    ]
  },
  options: {
    responsive: true,
    maintainAspectRatio: false,
    interaction: {
      mode: 'index',
      intersect: false
    },
    plugins: {
      legend: {
        display: true,
        position: 'top',
        labels: {
          font: { size: 12, weight: '600' },
          usePointStyle: true,
          padding: 15
        }
      },
      tooltip: {
        backgroundColor: 'rgba(0, 0, 0, 0.8)',
        padding: 12,
        titleFont: { size: 14, weight: 'bold' },
        bodyFont: { size: 13 },
        callbacks: {
          label: function(context) {
            let label = context.dataset.label || '';
            if (label) {
              label += ': ';
            }
            if (context.parsed.y !== null) {
              if (context.datasetIndex === 0) {
                label += context.parsed.y + '%';
              } else {
                label += context.parsed.y.toLocaleString('es-PE');
              }
            }
            return label;
          }
        }
      }
    },
    scales: {
      y: {
        type: 'linear',
        display: true,
        position: 'left',
        title: {
          display: true,
          text: 'Nivel de Servicio (%)',
          font: { size: 12, weight: '600' },
          color: '#3B82F6'
        },
        ticks: {
          callback: function(value) {
            return value + '%';
          },
          font: { size: 11 }
        },
        grid: {
          color: 'rgba(0, 0, 0, 0.05)'
        }
      },
      y1: {
        type: 'linear',
        display: true,
        position: 'right',
        title: {
          display: true,
          text: 'Llamadas',
          font: { size: 12, weight: '600' },
          color: '#8B5CF6'
        },
        ticks: {
          callback: function(value) {
            return value.toLocaleString('es-PE');
          },
          font: { size: 11 }
        },
        grid: {
          drawOnChartArea: false
        }
      },
      x: {
        grid: {
          display: false
        },
        ticks: {
          font: { size: 11 }
        }
      }
    }
  }
});
<% } %>

<% if (tendenciaPorHora && tendenciaPorHora.length > 0) { %>
// Gráfico de Tendencia Por Hora
const tendenciaPorHoraData = <%- JSON.stringify(tendenciaPorHora) %>;
new Chart(document.getElementById('tendenciaPorHoraChart'), {
  type: 'bar',
  data: {
    labels: tendenciaPorHoraData.map(d => d.hora),
    datasets: [{
      label: 'Llamadas Contestadas',
      data: tendenciaPorHoraData.map(d => d.contestadas),
      backgroundColor: tendenciaPorHoraData.map(d => {
        const hora = parseInt(d.hora.split(':')[0]);
        if (hora >= 8 && hora <= 12) return 'rgba(59, 130, 246, 0.8)'; // Mañana - Azul
        if (hora >= 13 && hora <= 18) return 'rgba(139, 92, 246, 0.8)'; // Tarde - Morado
        return 'rgba(156, 163, 175, 0.5)'; // Noche - Gris
      }),
      borderColor: tendenciaPorHoraData.map(d => {
        const hora = parseInt(d.hora.split(':')[0]);
        if (hora >= 8 && hora <= 12) return '#3B82F6';
        if (hora >= 13 && hora <= 18) return '#8B5CF6';
        return '#9CA3AF';
      }),
      borderWidth: 2,
      borderRadius: 6,
      borderSkipped: false
    }]
  },
  options: {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      legend: {
        display: false
      },
      tooltip: {
        backgroundColor: 'rgba(0, 0, 0, 0.8)',
        padding: 12,
        titleFont: { size: 14, weight: 'bold' },
        bodyFont: { size: 13 },
        callbacks: {
          label: function(context) {
            return 'Llamadas: ' + context.parsed.y.toLocaleString('es-PE');
          },
          afterLabel: function(context) {
            const ns = tendenciaPorHoraData[context.dataIndex].nivelServicio;
            return 'NS: ' + ns.toFixed(2) + '%';
          }
        }
      }
    },
    scales: {
      y: {
        beginAtZero: true,
        title: {
          display: true,
          text: 'Llamadas Contestadas',
          font: { size: 12, weight: '600' }
        },
        ticks: {
          callback: function(value) {
            return value.toLocaleString('es-PE');
          },
          font: { size: 10 }
        },
        grid: {
          color: 'rgba(0, 0, 0, 0.05)'
        }
      },
      x: {
        grid: {
          display: false
        },
        ticks: {
          font: { size: 10 },
          maxRotation: 45,
          minRotation: 45
        }
      }
    }
  }
});
<% } %>
</script>
